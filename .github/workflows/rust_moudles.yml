name: Rust module dependencies
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Print Hello World
        run: echo "Hello, World!"
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install cargo modules
        run: |
          cargo install cargo-modules
          cargo install flamegraph
          sudo apt-get install -y linux-tools-common linux-tools-generic linux-tools-`uname -r`
      - uses: actions/checkout@v4
        with:
          repository: 'oll3/bita'
      - name: flamegraph generator 
        run: |
          if [[ ! -d graph ]];then
            mkdir graph
          fi
          if [[ ! -d graph/svgs ]];then
              mkdir graph/svgs
          fi
          cargo build -r
          flamegraph -o graph/svgs/compress.svg -- target/release/bita compress -i Cargo.lock lock.com
      - name: Graphical Module Structure
        if: ${{ contains('sdsdsdsd', 'windows') }}
        run: |
          if [[ ! -d graph ]];then
            mkdir graph
          fi
          if [[ ! -d .bin ]];then
            mkdir .bin
          fi
          cd .bin 
          curl --location-trusted https://github.com/charmbracelet/freeze/releases/download/v0.1.6/freeze_0.1.6_amd64.deb -o freeze.deb
          sudo dpkg -i freeze.deb
          ls -l
          cd ..
          pwd
          if [[ ! -d graph/svgs ]];then
              mkdir graph/svgs
          fi
          cargo modules dependencies --package bitar --no-externs --no-fns --no-sysroot --no-traits --no-types --no-uses > graph/graph.dep.dot
          cargo modules dependencies --package bita  --no-externs --no-sysroot > graph/bita.dep.dot
          cargo modules structure  --package bita  | freeze -l txt -o graph/svgs/bita.structure.svg -
          cargo modules structure  --package bitar  | freeze -l txt -o graph/svgs/bitar.structure.svg -
          sudo apt-get install -y graphviz
          ls
          cd graph
          pwd
          if [[ ! -d svgs ]];then
              mkdir svgs
          fi
          for fname in `ls .`;do
              echo $fname
              if [[ -f $fname ]];then
                  if [[ $fname == *.dot ]];then
                    noext="${fname%.*}"
                    outname="${noext}.svg"
                    dot -Tsvg -o "./svgs/$outname" $fname
                    echo $outname
                  fi
              fi
          done
          
      - name: Upload build
        uses: actions/upload-artifact@master
        with:
          name: graph
          path: graph